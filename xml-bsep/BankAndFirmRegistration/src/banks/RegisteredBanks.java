//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5.1 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.05.16 at 11:31:57 PM CEST 
//


package banks;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.PropertyException;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import util.NSPrefixMapper;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http:/www.toomanysecrets.com/banke}bank" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "bank"
})
@XmlRootElement(name = "registeredBanks")
public class RegisteredBanks {

    @XmlElement(required = true)
    protected List<Bank> bank;

    /**
     * Gets the value of the bank property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the bank property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBank().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Bank }
     * 
     * 
     */
    public List<Bank> getBank() {
        if (bank == null) {
            bank = new ArrayList<Bank>();
        }
        return this.bank;
    }
    
    public void setBank(List<Bank> banks) {
    	this.bank = banks;
    }
    
    public void addBank(Bank bank) {
		this.bank.add(bank);
	}

	public Bank getBank(String swift){
		Bank ret = null;
		for(Bank b:bank){
			if(b.getSwiftCode().equals(swift))
				ret = b;				
		}
		return ret;
	}

	public Bank removeBank(String swift){
		Bank ret = getBank(swift);
		if(ret != null) {
			bank.remove(ret);
			return ret;
		}
		return null;
	}
	
	public static RegisteredBanks load() {
		
		//XML -> Objektni model
		
		try {
			//Definisemo kontekst, tj. paket(e) u kome se nalaze bean-ovi
			JAXBContext context1 = JAXBContext.newInstance("banks");
			//Klasa za XML -> objektni model
			Unmarshaller unmarshaller = context1.createUnmarshaller();
			//Transformacija u objektni model
			RegisteredBanks registeredBanks = (RegisteredBanks) unmarshaller.unmarshal(new File("./xsdSchemas/registered_banks.xml"));
			//ispis na ekran
			System.out.println(registeredBanks);
			return registeredBanks;
			
		} catch (JAXBException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
		//Sad moze da se menja objeknti model
	}
	
	public void store(List<Bank> banks) {
		
		//Objeknti model -> XML
		
		//Definisemo kontekst, tj. paket(e) u kome se nalaze bean-ovi
		//Posto je isti kontekst moze se koristiti i klasa context1
		try {
			JAXBContext context2 = JAXBContext.newInstance("banks");
			//Klasa za transformisanje objektnog modela u XML
			Marshaller marshaller = context2.createMarshaller();
			//na ovaj naci se setuje koji prefiks se koristi za koji namespace
			marshaller.setProperty("com.sun.xml.bind.namespacePrefixMapper", new NSPrefixMapper());
			//da se radi identacija
			marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
			//serijaliacija na System.out stream
			RegisteredBanks registeredBanks = new RegisteredBanks();
			registeredBanks.setBank(banks);
			marshaller.marshal(registeredBanks, new BufferedWriter(new FileWriter(new File("./xsdSchemas/registered_banks.xml"))));
		} catch (PropertyException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JAXBException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
